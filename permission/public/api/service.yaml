swagger: '2.0'
info:
  description:  >-
    This is `permission service`'s api document.
    You can use this service to `get` user permission/`check` user permission.
  version: 1.0.0
  title: Permission Service 
  contact:
    email: dlycliu@cn.ibm.com 
host: 127.0.0.1:3000
basePath: /v1
tags:
  - name: permission
    description: Access to User permission 
schemes:
  - https
  - http
paths:
 
  '/permission/{userId}/{permission}':
    get:
      tags:
        - permission
      summary: check user's permission data by user id(email)
      description: Returns user permission data
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: ID of user that needs to be fetched
          required: true
          type: string
          maximum: 100
          minimum: 1
          format: email
        - name: permission
          in: path
          description: target permission
          required: true
          type: string
          maximum: 100
          minimum: 1 
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              code:
                type: integer
                description: result code,0 ok,100 not this permission
              message:
                type: string
                description: result message
      security:
        - api_key: []
  /permission/data:
    put:
      tags:
        - permission
      summary: add user's persission
      description: ''
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: add users permission
          required: true
          schema:
            $ref: '#/definitions/EditPermission'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/BaseReturnPermission'
        '400':
          description: Invalid user
    post:
      tags:
        - permission
      summary: update users persissions\
      description: ''
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: add user permission
          required: true
          schema:
            $ref: '#/definitions/UpdatePermissions'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/BaseReturnPermission'
        '400':
          description: Invalid user
  '/permission/data/{userId}':
    get:
      tags:
        - permission
      summary: get permission data by ID
      description: >-
        For valid response try integer IDs with value >= 1 and <= 10.        
        Other values will generated exceptions
      produces:
        - application/xml
        - application/json
      parameters:
        - name: userId
          in: path
          description: ID of user that needs to be fetched
          required: true
          type: string
          maximum: 100
          minimum: 1
          format: email
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ReturnPermission'
        '400':
          description: Invalid ID supplied
        '404':
          description: not found
    delete:
      tags:
        - permission
      summary: Delete user's permission
      description: >-
        For valid response try integer IDs with positive integer value.        
        Negative or non-integer values will generate API errors 
      produces:
        - application/xml
        - application/json
      parameters:
        - name: userId
          in: path
          description: ID of user that needs to be fetched
          required: true
          type: string
          maximum: 100
          minimum: 1
          format: email
        - in: body
          name: body
          description: delete user permission
          required: true
          schema:
            type: object
            properties:
              operator: 
                type: string
                description: operator id(email)
                format: email
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              code:
                type: integer
                description: result code,0 ok
              message:
                type: string
                description: result message
              value:
                type: object
                properties:
                  userId: 
                    type: string
                    description: user id(email)
                    format: email 
        '400':
          description: Invalid ID supplied
        '404':
          description: not found
securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Permission:
    type: object
    properties:
      userId: 
        type: string
        description: user id(email)
        format: email
      permissions:
        type: array
        items:
          type: string 
  Permissions:
    type: array
    items:
        $ref: '#/definitions/Permission'
  BaseReturnPermission:
    type: object
    properties:
      code:
        type: integer
        description: result code,0 ok
      message:
        type: string
        description: result message
  EditPermission:
    type: object
    properties:
      userId: 
        type: string
        description: user id(email)
        format: email
      permissions:
        type: array
        items:
          type: string 
      operator: 
        type: string
        description: operator id(email)
        format: email
  UpdatePermissions:
    type: object
    properties:
      operator: 
        type: string
        description: operator id(email)
        format: email
      users:
        type: array
        items:
            $ref: '#/definitions/Permission'
  ReturnPermission:
    type: object
    properties:
      code:
        type: integer
        description: result code,0 ok
      message:
        type: string
        description: result message
      value:
        type: object
        properties:
          userId: 
            type: string
            description: user id(email)
            format: email
          permissions:
            type: array
            items:
              type: string 
          
externalDocs:
  description: ""
  url: "https://XXXXXXX.mybluemix.net"
